{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TrainersPage=()=>{const[trainers,setTrainers]=useState([]);const[newTrainer,setNewTrainer]=useState({name:'',specialty:'',bio:''});const[editingId,setEditingId]=useState(null);// Fetch all trainers\nuseEffect(()=>{getAllTrainers();},[]);const getAllTrainers=async()=>{const response=await axios.get('/api/trainers');setTrainers(response.data);};// Add or update trainer\nconst createTrainer=async()=>{if(editingId){await axios.put(\"/api/trainers/\".concat(editingId),newTrainer);}else{await axios.post('/api/trainers',newTrainer);}getAllTrainers();// Refresh the list\nsetNewTrainer({name:'',specialty:'',bio:''});// Reset form\nsetEditingId(null);// Reset editing state\n};// Start editing a trainer\nconst updateTrainer=trainer=>{setEditingId(trainer.id);setNewTrainer({name:trainer.name,specialty:trainer.specialty,bio:trainer.bio});};// Delete a trainer\nconst deleteTrainer=async id=>{await axios.delete(\"/api/trainers/\".concat(id));getAllTrainers();// Refresh the list\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Trainers\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",value:newTrainer.name,onChange:e=>setNewTrainer({...newTrainer,name:e.target.value})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Specialty\",value:newTrainer.specialty,onChange:e=>setNewTrainer({...newTrainer,specialty:e.target.value})}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Bio\",value:newTrainer.bio,onChange:e=>setNewTrainer({...newTrainer,bio:e.target.value})}),/*#__PURE__*/_jsx(\"button\",{onClick:createTrainer,children:editingId?'Update':'Add'})]}),/*#__PURE__*/_jsx(\"ul\",{children:trainers.map(trainer=>/*#__PURE__*/_jsxs(\"li\",{children:[trainer.name,\" - \",trainer.specialty,/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateTrainer(trainer),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTrainer(trainer.id),children:\"Delete\"})]},trainer.id))})]});};export default TrainersPage;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","TrainersPage","trainers","setTrainers","newTrainer","setNewTrainer","name","specialty","bio","editingId","setEditingId","getAllTrainers","response","get","data","createTrainer","put","concat","post","updateTrainer","trainer","id","deleteTrainer","delete","children","type","placeholder","value","onChange","e","target","onClick","map"],"sources":["/Users/Dustin/repos/fitclub/src/ui/src/pages/TrainersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TrainersPage = () => {\n    const [trainers, setTrainers] = useState([]);\n    const [newTrainer, setNewTrainer] = useState({ name: '', specialty: '', bio: '' });\n    const [editingId, setEditingId] = useState(null);\n\n    // Fetch all trainers\n    useEffect(() => {\n        getAllTrainers();\n    }, []);\n\n    const getAllTrainers = async () => {\n        const response = await axios.get('/api/trainers');\n        setTrainers(response.data);\n    };\n\n    // Add or update trainer\n    const createTrainer = async () => {\n        if (editingId) {\n            await axios.put(`/api/trainers/${editingId}`, newTrainer);\n        } else {\n            await axios.post('/api/trainers', newTrainer);\n        }\n        getAllTrainers(); // Refresh the list\n        setNewTrainer({ name: '', specialty: '', bio: '' }); // Reset form\n        setEditingId(null); // Reset editing state\n    };\n\n    // Start editing a trainer\n    const updateTrainer = (trainer) => {\n        setEditingId(trainer.id);\n        setNewTrainer({ name: trainer.name, specialty: trainer.specialty, bio: trainer.bio });\n    };\n\n    // Delete a trainer\n    const deleteTrainer = async (id) => {\n        await axios.delete(`/api/trainers/${id}`);\n        getAllTrainers(); // Refresh the list\n    };\n\n    return (\n        <div>\n            <h2>Trainers</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={newTrainer.name}\n                    onChange={(e) => setNewTrainer({ ...newTrainer, name: e.target.value })}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Specialty\"\n                    value={newTrainer.specialty}\n                    onChange={(e) => setNewTrainer({ ...newTrainer, specialty: e.target.value })}\n                />\n                <textarea\n                    placeholder=\"Bio\"\n                    value={newTrainer.bio}\n                    onChange={(e) => setNewTrainer({ ...newTrainer, bio: e.target.value })}\n                />\n                <button onClick={createTrainer}>{editingId ? 'Update' : 'Add'}</button>\n            </div>\n            <ul>\n                {trainers.map((trainer) => (\n                    <li key={trainer.id}>\n                        {trainer.name} - {trainer.specialty}\n                        <button onClick={() => updateTrainer(trainer)}>Edit</button>\n                        <button onClick={() => deleteTrainer(trainer.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TrainersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}